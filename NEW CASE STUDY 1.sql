-- Q1. How many states are there where products have been sold ?

    select count(distinct state) from location

-- Q2. How many products are of regular type ?

    select count(product) from product as pcount where type='regular'

-- Q3 How much spending has been done on marketing of product id 1

    select sum(marketing) as Marketing_expenses from fact where productid='1'

-- Q4 What is the minimum sales of a product ?

    select MIN(sales) as min_sales from fact 

-- Q5 Display max Cost of Good Sold(COGS).

   select max(cogs) as max_sold from fact

-- Q6 Display the Details of the productid where product type is coffee

   select productid from product where product_type='coffee'

-- Q7 Display the details where total_expenses is greater than 40.

   select * from fact where total_expenses>40

-- Q8 What is the average sales in Area_Code 719 ?

    select avg(sales) as Avg_sales from fact where Area_Code=719

-- Q9 Find out the total profit generated by Colorado state.

    select sum(profit) as profit_generated from fact inner join location on
	fact.area_code = location.area_code where state ='Colorado' 


-- Q10 Display the average inventory for each product id.

    select productid,avg(inventory) as Avg_inventory from fact group by productid order by productid

-- Q11 Display state in a sequential order in a location table.

   select * from location order by state desc
 
-- Q12 Display the average budget margin of the store where average budget margin should be
--     greater than 100.

   select avg(budget_margin) as avg_margins from fact  group by productid
    having avg(budget_margin)>100

	     
-- Q13 What is the total sales done on date 2010-01-01

   select sum(sales) as total_sale from fact where date='2010-01-01'
   
-- Q14 Display the average total expense of each product id on individual date

   select productid,date,avg(total_expenses) as Avg_expense from fact group by productid 
   ,date order by date,productid

-- Q15 Display the table with the following attributes such as
--     Date, productid, product_type, product, Sales, profit, state, area_code

    select Date, product.productid, product.product_type, product.product, Sales, profit, 
	location.state, location.area_code from fact inner join location on fact.area_code=
	location.area_code inner join product on fact.productid=product.productid 


-- Q16 Display the rank without any gap to show the Sales wise rank.

    select date,productid,sales,dense_rank() over (order by sales asc) as sales_rank from fact

-- Q17 Find the State wise Profit and Sales.

    select state,sum(profit) as State_profit,sum(sales) as state_sales from fact inner join location on
	 fact.area_code=location.area_code group by state

-- Q18 Find the State wise Profit and Sales along with the Product Name.

    select state,product,sum(profit) as State_profit,sum(sales)as state_sales from fact inner join product
	 on fact.productid=product.productid inner join location on fact.area_code=location.area_code 
	 group by state,product


-- Q19 If there is an increase in sales of 5%. Calculate the increased sales.

    select sales,(sales+(sales*0.05)) as Increased_sales from fact 

-- Q20 Find the maximum profit along with the Product id and Product Type.

    select fact.productid,product_type,max(profit) as Max_profit from fact inner join product on
	fact.productid=product.productid group by fact.productid,product_type
		
-- Q21 Create a Stored Procedure to fetch the result according to the product type from Product.

    create procedure P1 @P_type varchar(20)
	as
	select * from product
	where product_type=@P_type


-- Q22 Write a query by creating a condition in which if the total expenses is less than 60 
--     then it is a profit or else loss.

    select total_expenses,iif((total_expenses)<60,'PROFIT','LOSS') as Status from fact 
	

-- Q23 Give the total weekly sales value with the Date and productid details.
--     Use roll-up to pull the data in hierarchical order.

     select date,productid,sum(sales) as weekly_sale from fact group by date,productid 
	 with rollup 

-- Q24 Apply union and intersection operator on the tables which consist of attribute area code.

    select area_code from fact 
	union
	select area_code from location

	select area_code from fact 
	intersect
	select area_code from location

-- Q25 Create a user-defined function for the product table to fetch a particular product
--     type based upon the user’s preference.

    create function F1(@P_TYPE varchar(50))
	returns
	table as 
	return select * from product where product_type=@P_TYPE

-- Q26 Change the product type from coffee to tea where product id is 1 and undo it.

    UPDATE Product
    SET product_type='tea' 
    WHERE productid=1

	-- reversing 

	UPDATE Product
    SET product_type='Coffee' 
    WHERE productid=1

-- Q27 Display the Date, productid and sales where total expenses are between 100 to 200.

    select date,productid,sales from fact where total_expenses between 100 and 200 

-- Q28 Delete the records in the product table for regular type.

    DELETE FROM Product WHERE Type='regular'

	
-- Q29 Display the ASCII value of the fifth character from the column product.

   SELECT  Product,SUBSTRING(Product, 5, 1)as Fifth_char,  ascii(SUBSTRING(Product, 5, 1))
   AS ASCII_VALUE  FROM Product




   


    

